{"ast":null,"code":"import { RECIPE_RANDOM_FAIL, RECIPE_RANDOM_SUCCESS, RECIPE_RANDOM_REQUEST } from '../constants/recipeConstants';\nconst APIKEY = '37fab99e028f4939966406cf0b08ff4d';\nexport const recipeRandom = () => async dispatch => {\n  //thunk allow to make asyncronous request fucntion after a function\n  try {\n    dispatch({\n      type: RECIPE_RANDOM_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.spoonacular.com/recipes/random?number=1&apiKey=${APIKEY}`);\n    dispatch({\n      type: RECIPE_RANDOM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: RECIPE_RANDOM_FAIL,\n      paylod: error.response\n    });\n  }\n};","map":{"version":3,"sources":["/Users/armando/Documents/Projects/Recipe/frontend/src/actions/recipeActions.js"],"names":["RECIPE_RANDOM_FAIL","RECIPE_RANDOM_SUCCESS","RECIPE_RANDOM_REQUEST","APIKEY","recipeRandom","dispatch","type","data","axios","get","payload","error","paylod","response"],"mappings":"AACA,SAAQA,kBAAR,EAA4BC,qBAA5B,EAAkDC,qBAAlD,QAA8E,8BAA9E;AAEA,MAAMC,MAAM,GAAE,kCAAd;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAmB;AACjD;AAEA,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ;AAAP,KAAD,CAAR;AAEA,UAAM;AAACK,MAAAA;AAAD,QAAS,MAAMC,KAAK,CAACC,GAAN,CAAW,8DAA6DN,MAAO,EAA/E,CAArB;AAEAE,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,qBADD;AAELS,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GATD,CASE,OAAOI,KAAP,EAAc;AACZN,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,kBAAP;AACTY,MAAAA,MAAM,EAAED,KAAK,CAACE;AADL,KAAD,CAAR;AAEH;AACJ,CAhBM","sourcesContent":["\nimport {RECIPE_RANDOM_FAIL, RECIPE_RANDOM_SUCCESS,RECIPE_RANDOM_REQUEST} from '../constants/recipeConstants'\n\nconst APIKEY= '37fab99e028f4939966406cf0b08ff4d'\n\nexport const recipeRandom = () => async (dispatch) =>{\n    //thunk allow to make asyncronous request fucntion after a function\n\n    try {\n        dispatch({type: RECIPE_RANDOM_REQUEST})\n\n        const {data} = await axios.get(`https://api.spoonacular.com/recipes/random?number=1&apiKey=${APIKEY}`)\n\n        dispatch({\n            type: RECIPE_RANDOM_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({type: RECIPE_RANDOM_FAIL,\n        paylod: error.response})\n    }\n}"]},"metadata":{},"sourceType":"module"}