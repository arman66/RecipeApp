{"ast":null,"code":"import axios from 'axios';\nimport { RECIPE_RANDOM_FAIL, RECIPE_RANDOM_SUCCESS, RECIPE_RANDOM_REQUEST, RECIPE_SEARCH_SUCCESS, RECIPE_SEARCH_FAIL, RECIPE_SEARCH_REQUEST } from '../constants/recipeConstants';\nconst APIKEY = '37fab99e028f4939966406cf0b08ff4d';\nexport const recipeApiRandom = () => async dispatch => {\n  //thunk allow to make asyncronous request fucntion after a function\n  try {\n    console.log('recipeapiRandom fired');\n    dispatch({\n      type: RECIPE_RANDOM_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.spoonacular.com/recipes/random?number=1&apiKey=${APIKEY}`);\n    dispatch({\n      type: RECIPE_RANDOM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: RECIPE_RANDOM_FAIL,\n      paylod: error.response\n    });\n  }\n};\nexport const recipeApiSearch = (keyword = '') => async dispatch => {\n  try {\n    dispatch({\n      type: RECIPE_SEARCH_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${keyword}&number=1&addRecipeInformation&apiKey=${APIKEY}`);\n    dispatch({\n      type: RECIPE_SEARCH_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: RECIPE_SEARCH_FAIL,\n      paylod: error.response\n    });\n  }\n};","map":{"version":3,"sources":["/Users/armando/Documents/Projects/Recipe/frontend/src/actions/recipeActions.js"],"names":["axios","RECIPE_RANDOM_FAIL","RECIPE_RANDOM_SUCCESS","RECIPE_RANDOM_REQUEST","RECIPE_SEARCH_SUCCESS","RECIPE_SEARCH_FAIL","RECIPE_SEARCH_REQUEST","APIKEY","recipeApiRandom","dispatch","console","log","type","data","get","payload","error","paylod","response","recipeApiSearch","keyword"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,EAA4BC,qBAA5B,EAAkDC,qBAAlD,EAAyEC,qBAAzE,EAA+FC,kBAA/F,EAAkHC,qBAAlH,QAA8I,8BAA9I;AAEA,MAAMC,MAAM,GAAE,kCAAd;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAmB;AACpD;AAEA,MAAI;AAEJC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACIF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAET;AAAP,KAAD,CAAR;AAGA,UAAM;AAACU,MAAAA;AAAD,QAAS,MAAMb,KAAK,CAACc,GAAN,CAAW,8DAA6DP,MAAO,EAA/E,CAArB;AAIAE,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,qBADD;AAELa,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAdD,CAcE,OAAOG,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEX,kBAAP;AACTgB,MAAAA,MAAM,EAAED,KAAK,CAACE;AADL,KAAD,CAAR;AAEH;AACJ,CArBM;AAuBP,OAAO,MAAMC,eAAe,GAAC,CAACC,OAAO,GAAC,EAAT,KAAc,MAAOX,QAAP,IAAkB;AAI7D,MAAI;AAGIA,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR;AAIA,UAAM;AAACO,MAAAA;AAAD,QAAS,MAAMb,KAAK,CAACc,GAAN,CAAW,2DAA0DM,OAAQ,yCAAwCb,MAAO,EAA5H,CAArB;AAKAE,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,qBADD;AAELW,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAhBL,CAgBM,OAAOG,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP,kBAAP;AACTY,MAAAA,MAAM,EAAED,KAAK,CAACE;AADL,KAAD,CAAR;AAEH;AACJ,CAxBM","sourcesContent":["import axios from 'axios'\nimport {RECIPE_RANDOM_FAIL, RECIPE_RANDOM_SUCCESS,RECIPE_RANDOM_REQUEST, RECIPE_SEARCH_SUCCESS,RECIPE_SEARCH_FAIL,RECIPE_SEARCH_REQUEST} from '../constants/recipeConstants'\n\nconst APIKEY= '37fab99e028f4939966406cf0b08ff4d'\n\nexport const recipeApiRandom = () => async (dispatch) =>{\n    //thunk allow to make asyncronous request fucntion after a function\n\n    try {\n\n    console.log('recipeapiRandom fired')\n        dispatch({type: RECIPE_RANDOM_REQUEST})\n\n        \n        const {data} = await axios.get(`https://api.spoonacular.com/recipes/random?number=1&apiKey=${APIKEY}`)\n\n        \n\n        dispatch({\n            type: RECIPE_RANDOM_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({type: RECIPE_RANDOM_FAIL,\n        paylod: error.response})\n    }\n}\n\nexport const recipeApiSearch=(keyword='')=>async (dispatch)=>{\n\n\n\ntry {\n\n    \n        dispatch({type: RECIPE_SEARCH_REQUEST})\n\n        \n\n        const {data} = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${keyword}&number=1&addRecipeInformation&apiKey=${APIKEY}`)\n\n\n        \n\n        dispatch({\n            type: RECIPE_SEARCH_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({type: RECIPE_SEARCH_FAIL,\n        paylod: error.response})\n    }\n}"]},"metadata":{},"sourceType":"module"}